apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'

def customProperties = new Properties()
def customPropertiesFile = rootProject.file("custom.properties")
if (customPropertiesFile.exists()) {
    customProperties.load(new FileInputStream(customPropertiesFile))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.esgi.nova"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 2
        versionName "2.0.0"
        testInstrumentationRunner "com.esgi.nova.runner.TestRunner"


        buildConfigField("String", "apiUrl", "\"${System.getenv('API_URL') ?: customProperties['API_URL']}\"")
        buildConfigField("String", "registerUrl", "\"${System.getenv('REGISTER_URL') ?: customProperties['REGISTER_URL']}\"")
        buildConfigField("String", "securedNetworkOn", "\"${System.getenv('SECURED_NETWORK_ON') ?: customProperties['SECURED_NETWORK_ON']}\"")


        // Populates BuildConfig.hubName with the value that was stored APP_NH_NAME at build time.
        buildConfigField("String", "appNhName", "\"${System.getenv('APP_NH_NAME') ?: customProperties['APP_NH_NAME']}\"")
        //Populates BuildConfig.hubListenConnectionString with the value that was stored in APP_NH_CONNECTION_STRING at build time.
        buildConfigField("String", "appNhEndpoint", "\"${System.getenv('APP_NH_ENDPOINT') ?: customProperties['APP_NH_ENDPOINT']}\"")
        buildConfigField("String", "appNhSharedAccessKeyName", "\"${System.getenv('APP_NH_SHARED_ACCESS_KEY_NAME') ?: customProperties['APP_NH_SHARED_ACCESS_KEY_NAME']}\"")
        buildConfigField("String", "appNhSharedAccessKey", "\"${System.getenv('APP_NH_SHARED_ACCESS_KEY') ?: customProperties['APP_NH_SHARED_ACCESS_KEY']}\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}


dependencies {
    //Firebase

    implementation "com.google.firebase:firebase-core:$firebase_core_version"
    implementation "com.google.firebase:firebase-messaging:$firebase_messaging_version"
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //Azure Notification Hubs
    implementation 'com.microsoft.azure:notification-hubs-android-sdk:1.1.4'
    //Volley
    implementation 'com.android.volley:volley:1.1.1'


    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "com.google.guava:guava:30.1-jre"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-process:2.2.0'
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'


    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7"


    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    
    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'


    androidTestImplementation 'androidx.test:core-ktx:1.3.0'

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha03'
    testImplementation 'com.google.dagger:hilt-android-testing:2.31.2-alpha'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.31.2-alpha'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.31.2-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.31.2-alpha'


    //Material Design
    implementation "com.google.android.material:material:$material_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Translations
    implementation "com.github.YarikSOffice:lingver:$lingver_version"


    //Mocks
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito-inline:2.28.0'
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'com.google.dagger:hilt-android-testing:2.31.2-alpha'
    testImplementation 'com.linkedin.dexmaker:dexmaker-mockito-inline:2.28.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.test.ext:junit:1.1.2"

}
